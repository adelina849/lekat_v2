CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_PERSEN_LAPORAN_INSERT_TO_TB_RANGKING`(IN `V_CARI` VARCHAR(100),IN `V_PERIODE` VARCHAR(100))
BEGIN
	CREATE TEMPORARY TABLE IF NOT EXISTS TMP_JUM_LAP_PERIODE 
						AS (
								SELECT 
									CONCAT(A.PER_KODE,COALESCE(B.LAP_ID) ) AS CON_PERIODE_LAP
									,A.PER_ID,A.PER_KODE,A.PER_NAMA,A.PER_KATEGORI
									,B.LAP_ID,B.LAP_KODE,B.LAP_NAMA
									,COUNT(*) AS JUMENTRY
								FROM tb_periode AS A 
								LEFT JOIN tb_laporan AS B ON A.PER_KATEGORI = B.LAP_PERIODE 
									
                                    AND (
										
                                        B.LAP_KODE <> 'DUKKEL'
										AND B.LAP_KODE <> 'TDK_POTENSI'
										AND B.LAP_KODE <> 'PRDK_UNGGUL'
										AND B.LAP_KODE <> 'PTN_UNGGUL'
										
                                        )
								WHERE CONCAT(A.PER_KODE,COALESCE(B.LAP_ID) ) IS NOT NULL
                                -- AND NOW() >= A.PER_DARI  AND NOW() <= A.PER_SAMPAI
                                AND PER_KODE = V_PERIODE
								GROUP BY
									A.PER_ID,A.PER_KODE,A.PER_NAMA,A.PER_KATEGORI
									,B.LAP_ID,B.LAP_KODE,B.LAP_NAMA
						  );
	
    
	SET @JUMALL = (SELECT COUNT(CON_PERIODE_LAP) AS CON_PERIODE_LAP FROM TMP_JUM_LAP_PERIODE);
    SET @PERIODE_BULANAN_AKTIF = V_PERIODE;
	SET @no = 0; -- @no:=@no+1 AS nomor,
    
    
CREATE TEMPORARY TABLE IF NOT EXISTS TMP_FIX_ANGKING_TANPA_INDEX 
						AS (
								SELECT
									A.KEC_ID,A.KEC_NAMA,A.KEC_CAMAT
									,COALESCE(SUM(AA.JUMENTRY),0) AS JUMENTRY
									,@JUMALL AS JUMALL
									,ROUND( COALESCE(SUM(AA.JUMENTRY),0) / (@JUMALL/100) ,2) AS PRSN
									,MAX(BLAP_DTINS) AS DTINS
								FROM tb_kec AS A
								LEFT JOIN
								(
									SELECT
										A.CON_PERIODE_LAP,A.PER_ID,A.PER_KODE,A.PER_NAMA,A.PER_KATEGORI,A.LAP_KODE,A.LAP_NAMA
										,COALESCE(B.KEC_ID,'') AS KEC_ID
										,COUNT(A.CON_PERIODE_LAP) AS JUMALL
										-- ,MAX(B.BLAP_DTINS) AS BLAP_DTINS
										-- ,CONCAT(LEFT(B.BLAP_DTDARI,10),' ',RIGHT(B.BLAP_DTINS,8))  AS BLAP_DTINS
										-- ,STR_TO_DATE(CONCAT(LEFT(B.BLAP_DTDARI,10),' ',RIGHT(B.BLAP_DTINS,8)),'%Y%m%d %h%i') AS BLAP_DTINS
										
										
										,CASE
											WHEN (
													(COALESCE(B.KEC_ID,'') = 'KEC2017101900025') 
													OR (COALESCE(B.KEC_ID,'') = 'KEC2017101900031') 
													OR (COALESCE(B.KEC_ID,'') = 'KEC2017101900024')
													OR (COALESCE(B.KEC_ID,'') = 'KEC2017101900017')
												) THEN
												-- CONCAT(LEFT(B.BLAP_DTDARI,10),' ',RIGHT(B.BLAP_DTINS,8))
												MAX(B.BLAP_DTUPDT)
											ELSE
												MAX(B.BLAP_DTINS)
											END AS BLAP_DTINS
										
										,MAX(B.DBLAP_HITUNG) AS DBLAP_HITUNG
										,
										CASE WHEN B.KEC_ID IS NULL THEN
											0
										ELSE
											1
										END AS JUMENTRY
									FROM
									(
										SELECT * FROM TMP_JUM_LAP_PERIODE
									) AS A
									LEFT JOIN tb_buat_laporan AS B ON A.CON_PERIODE_LAP = CONCAT(COALESCE(B.BLAP_PERIODE,''),COALESCE(B.LAP_ID,'')) 
									GROUP BY A.CON_PERIODE_LAP,A.PER_ID,A.PER_KODE,A.PER_NAMA,A.PER_KATEGORI,A.LAP_KODE,A.LAP_NAMA,B.KEC_ID
									HAVING MAX(B.DBLAP_HITUNG) >= 1
									
								) AS AA ON A.KEC_ID = AA.KEC_ID
								WHERE A.KEC_NAMA LIKE CONCAT('%', V_CARI, '%')
								GROUP BY A.KEC_ID,A.KEC_NAMA,A.KEC_CAMAT
								ORDER BY ROUND( COALESCE(SUM(AA.JUMENTRY),0) / (@JUMALL/100) ,2) DESC,MAX(BLAP_DTINS) ASC
							);
                            
    DELETE FROM tb_rangking WHERE PERIODE = @PERIODE_BULANAN_AKTIF;   
    
    INSERT INTO tb_rangking (KEC_ID,KEC_NAMA,PERIODE,NO_RANGKING,tgl_ins)
    SELECT KEC_ID,KEC_NAMA,@PERIODE_BULANAN_AKTIF AS PERIODE,@no:=@no+1 AS nomor,NOW() FROM TMP_FIX_ANGKING_TANPA_INDEX;
    
    SELECT * FROM tb_rangking WHERE PERIODE = @PERIODE_BULANAN_AKTIF ORDER BY NO_RANGKING ASC; 
    
    DROP TABLE TMP_JUM_LAP_PERIODE;
    DROP TABLE TMP_FIX_ANGKING_TANPA_INDEX;
END